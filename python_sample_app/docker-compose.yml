version: '3.6'

services:

  ia_eisbase:
    build:
      context: $PWD/../common
      dockerfile: $PWD/../common/dockerfiles/Dockerfile.eisbase
      args:
          UBUNTU_IMAGE_VERSION: ${UBUNTU_IMAGE_VERSION}
          EIS_VERSION: ${EIS_VERSION}
    image: ${DOCKER_REGISTRY}ia_eisbase:${EIS_VERSION}

  ## Define ia_common service
  ia_common:
    depends_on:
      - ia_eisbase
    build:
      context: $PWD/../common
      dockerfile: $PWD/../common/dockerfiles/Dockerfile.common
      args:
          EIS_VERSION: ${EIS_VERSION}
          # set CMAKE_BUILD_TYPE value to "Debug" to generate debug symbols
          CMAKE_BUILD_TYPE: "Release"
    read_only: true
    image: ${DOCKER_REGISTRY}ia_common:${EIS_VERSION}
  
  ##----End: EIS Base Images---- -- This Base images must be included for building any EIS servcies ----

  ## Define ETCD UI service - must be included to view ETCD data over web UI
  ia_etcd_ui:
    depends_on:
      - ia_common
    build:
      context: $PWD/../EtcdUI
      dockerfile: $PWD/../EtcdUI/Dockerfile
      args:
        ETCD_KEEPER_VERSION: ${ETCD_KEEPER_VERSION}
        EIS_VERSION: ${EIS_VERSION}
    read_only: true
    image: ${DOCKER_REGISTRY}ia_etcd_ui:${EIS_VERSION}
    container_name: ia_etcd_ui
    hostname: ia_etcd_ui
    network_mode: host
    restart: unless-stopped
    environment:
      AppName: "EtcdUi"
      DEV_MODE: ${DEV_MODE}
      NGINX_PORT: 7071
      CertType: "pem"
      no_proxy: ${eis_no_proxy},${ETCD_HOST}
      ETCD_HOST: ${ETCD_HOST}
    volumes:
      - "vol_etcd_keeper:/tmp/nginx"
    user: ${EIS_UID}
    secrets:
      - ca_etcd
      - etcd_root_cert
      - etcd_root_key

  ia_python_publisher:
    build:
      context: $PWD/../Samples/python_sample_app
      dockerfile: $PWD/../Samples/python_sample_app/Dockerfile.pub
      args:
        EIS_VERSION: ${EIS_VERSION}
        EIS_UID: ${EIS_UID}
        EIS_USER_NAME: ${EIS_USER_NAME}
        # set CMAKE_BUILD_TYPE value to "Debug" to generate debug symbols
        CMAKE_BUILD_TYPE: "Release"
    image: ${DOCKER_REGISTRY}ia_python_publisher:${EIS_VERSION}
    container_name: ia_python_publisher
    hostname: ia_python_publisher
    network_mode: host
    restart: unless-stopped
    user: ${EIS_UID}
    environment:
      AppName: "PythonPublisher"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${eis_no_proxy},${ETCD_HOST}
      ETCD_HOST: ${ETCD_HOST}
      # MessageBus Endpoint Configuration
      Server: "zmq_tcp,127.0.0.1:60013"
      Clients : "PythonSubscriber"
      CertType: "zmq"
      # ZMQ_RECV_HWM: "1000"

      # Use IPC mode (zmq_ipc) when VideoIngestion and VideoAnalytics based
      # containers are running on the same host. If they are running on diff
      # host, please use TCP mode for communication.
      # Eg: Stream cfg for
      # IPC: zmq_ipc, <absolute_socket_directory_path>
      # TPC: zmq_tcp, <publisher_host>:<publisher_port>
      PubTopics: "publish_test"
      publish_test_cfg: "zmq_tcp,127.0.0.1:60014"
      # publish_test_cfg_cfg: "zmq_ipc,${SOCKET_DIR}/"
    volumes:
      - "vol_eis_socket:${SOCKET_DIR}"
    secrets:
      - ca_etcd
      - etcd_PythonPublisher_cert
      - etcd_PythonPublisher_key

  ia_python_subscriber:
    build:
      context: $PWD/../Samples/python_sample_app
      dockerfile: $PWD/../Samples/python_sample_app/Dockerfile.sub
      args:
        EIS_VERSION: ${EIS_VERSION}
        EIS_UID: ${EIS_UID}
        EIS_USER_NAME: ${EIS_USER_NAME}
        # set CMAKE_BUILD_TYPE value to "Debug" to generate debug symbols
        CMAKE_BUILD_TYPE: "Release"
    image: ${DOCKER_REGISTRY}ia_python_subscriber:${EIS_VERSION}
    container_name: ia_python_subscriber 
    hostname: ia_python_subscriber
    network_mode: host
    restart: unless-stopped
    user: ${EIS_UID}
    environment:
      AppName: "PythonSubscriber"
      DEV_MODE: ${DEV_MODE}
      no_proxy: ${eis_no_proxy},${ETCD_HOST}
      ETCD_HOST: ${ETCD_HOST}
      # MessageBus Endpoint Configuration
      CertType: "zmq"
      # ZMQ_RECV_HWM: "1000"

      # Use IPC mode (zmq_ipc) when VideoIngestion and VideoAnalytics based
      # containers are running on the same host. If they are running on diff
      # host, please use TCP mode for communication.
      # Eg: Stream cfg for
      # IPC: zmq_ipc, <absolute_socket_directory_path>
      # TPC: zmq_tcp, <publisher_host>:<publisher_port>
      SubTopics: "PythonPublisher/publish_test"
      publish_test_cfg: "zmq_tcp,127.0.0.1:60014"
      #publish_test_cfg: "zmq_ipc,${SOCKET_DIR}/"
      RequestEP: "PythonPublisher"
      PythonPublisher_cfg: "zmq_tcp,127.0.0.1:60013"
    volumes:
      - "vol_eis_socket:${SOCKET_DIR}"
    secrets:
      - ca_etcd
      - etcd_PythonSubscriber_cert
      - etcd_PythonSubscriber_key

volumes:
  vol_etcd_keeper:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  vol_eis_socket:
    driver: local
    driver_opts:
      type: local
      o: bind
      device: ${EIS_INSTALL_PATH}/sockets

secrets:
  ca_etcd:
    file: provision/Certificates/ca/ca_certificate.pem
  etcd_PythonPublisher_cert:
    file: provision/Certificates/PythonPublisher/PythonPublisher_client_certificate.pem
  etcd_PythonPublisher_key:
    file: provision/Certificates/PythonPublisher/PythonPublisher_client_key.pem
  etcd_PythonSubscriber_cert:
    file: provision/Certificates/PythonSubscriber/PythonSubscriber_client_certificate.pem
  etcd_PythonSubscriber_key:
    file: provision/Certificates/PythonSubscriber/PythonSubscriber_client_key.pem
  etcd_root_cert:
    file: provision/Certificates/root/root_client_certificate.pem
  etcd_root_key:
    file: provision/Certificates/root/root_client_key.pem
